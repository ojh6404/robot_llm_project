#!/usr/bin/env python3

import sys
import rospy
import yaml

from skrobot.interfaces.ros.tf_utils import tf_pose_to_coords
from skrobot.interfaces.ros.transform_listener import TransformListener
from jsk_robocup_common.coord_utils import coord_to_dict

def main():
    rospy.init_node('print_coords', anonymous=True)

    use_tf2 = rospy.get_param('~use_tf2', True)
    from_frame = rospy.get_param('~from', 'map')
    to_frame = rospy.get_param('~to', 'base_footprint')

    tf_listener = TransformListener(use_tf2=use_tf2)
    rate = rospy.Rate(10)
    tf_pose = None
    while not rospy.is_shutdown() and tf_pose is None:
        tf_pose = tf_listener.lookup_transform(from_frame, to_frame)
        rate.sleep()
    coords = tf_pose_to_coords(tf_pose)
    text = '[coordinates form]\nskrobot.coordinates.Coordinates(\n    pos=[{}, {}, {}],\n    rot=[{}, {}, {}, {}])'. \
          format(*(coords.translation.tolist() + coords.quaternion.tolist()))
    print(text)
    now_dict = {"place name": coord_to_dict(coords)}
    print("[plcae dict form]")
    yaml.dump(now_dict, sys.stdout, allow_unicode=True, default_flow_style=None)

if __name__ == '__main__':
    main()
